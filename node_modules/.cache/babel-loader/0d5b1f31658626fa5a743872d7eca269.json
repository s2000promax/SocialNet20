{"ast":null,"code":"import { usersAPI } from '../api/api';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT    ';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nconst url1 = 'https://upload.wikimedia.org/wikipedia/commons/1/1c/Dmitry_Nagiev_2017_3.jpg';\nconst url2 = 'https://roscongress.org/upload/resize_cache/iblock/36c/289_289_2/rian_03054251.hr_.ru_.jpg';\nconst url3 = 'https://mk0fertilizerda3n4hh.kinstacdn.com/wp-content/uploads/2020/03/Mazepin-Dmitry-coronavirus-1044x686.webp';\nconst url4 = 'https://culturalforum.ru/content/participants/56/5650f3dd61f8e9e31a73573f717f2187-cropped.jpg';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [] // Array of user Id's\n\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n        /*\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n        */\n\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] //true\n          : state.followingInProgress.filter(id => id != action.userId) //false\n\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSucess = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport const unfollowSucess = userId => {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setUsersTotalCount = totalUsersCount => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    totalUsersCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggleFollowingProgress = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  };\n};\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setUsersTotalCount(data.totalCount)); //  debugger;\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await usersAPI.followUser(userId);\n\n    if (data.resultCode == 0) {\n      dispatch(followSucess(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await usersAPI.unFollowUser(userId);\n\n    if (data.resultCode == 0) {\n      dispatch(unfollowSucess(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/home/designer/GitHub/SocialNet20/src/redux/users-reducer.ts"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","url1","url2","url3","url4","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","filter","followSucess","unfollowSucess","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","follow","followUser","resultCode","unfollow","unFollowUser"],"mappings":"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","sourcesContent":["import { usersAPI } from '../api/api';\r\nimport { UserType } from '../types/types';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT    ';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst url1 = 'https://upload.wikimedia.org/wikipedia/commons/1/1c/Dmitry_Nagiev_2017_3.jpg';\r\nconst url2 = 'https://roscongress.org/upload/resize_cache/iblock/36c/289_289_2/rian_03054251.hr_.ru_.jpg';\r\nconst url3 = 'https://mk0fertilizerda3n4hh.kinstacdn.com/wp-content/uploads/2020/03/Mazepin-Dmitry-coronavirus-1044x686.webp';\r\nconst url4 = 'https://culturalforum.ru/content/participants/56/5650f3dd61f8e9e31a73573f717f2187-cropped.jpg';\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number> // Array of user Id's\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                                           ...state, \r\n                                           users: state.users.map ( u => {\r\n                                                                           if (u.id === action.userId) {\r\n                                                                             return {...u, followed: true}\r\n                                                                         }\r\n                                                                   return u;\r\n                                                                   })\r\n                                                                \r\n/*\r\n...state,\r\nusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n*/\r\n            }\r\n\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId] //true\r\n                    : state.followingInProgress.filter(id => id != action.userId) //false\r\n\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\ntype FollowSucessActionType = {\r\n    type: typeof FOLLOW \r\n    userId: number\r\n}\r\n\r\nexport const followSucess = (userId: number): FollowSucessActionType => { return ({ type: FOLLOW, userId }) }\r\n\r\ntype UnFollowSucessActionType = {\r\n    type: typeof UNFOLLOW \r\n    userId: number\r\n}\r\n\r\nexport const unfollowSucess = (userId: number): UnFollowSucessActionType => { return ({ type: UNFOLLOW, userId }) }\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => { return ({ type: SET_USERS, users }) }\r\n\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE \r\n    currentPage: number\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number):SetCurrentPageActionType => { return ({ type: SET_CURRENT_PAGE, currentPage }) }\r\n\r\ntype SetUsersTotalCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT \r\n    totalUsersCount: number\r\n}\r\n\r\nexport const setUsersTotalCount = (totalUsersCount: number):SetUsersTotalCountActionType => { return ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount }) }\r\n\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching: boolean):ToggleIsFetchingActionType => { return ({ type: TOGGLE_IS_FETCHING, isFetching }) }\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number):ToggleFollowingProgressActionType => { return ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId }) }\r\n\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        \r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            \r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n          //  debugger;\r\n        \r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let data = await usersAPI.followUser(userId);\r\n        \r\n            if (data.resultCode == 0) { dispatch(followSucess(userId)); }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        \r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let data = await usersAPI.unFollowUser(userId);\r\n        \r\n            if (data.resultCode == 0) { dispatch(unfollowSucess(userId)); }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n       \r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}