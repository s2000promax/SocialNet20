{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/SocialNet20/src/Components/Users/UsersContainer.jsx\";\n//Контейнерная компонента\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport PreLoader from '../Common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.requestUsers(pageNumber, this.props.pageSize); //debugger;\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(PreLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/*\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n        \r\n    }\r\n}\r\n*/\n\n\nlet mapStateToProps = state => {\n  return {\n    //users: getUsers(state),\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose( //withAuthRedirect,\nconnect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/home/designer/GitHub/SocialNet20/src/Components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setCurrentPage","toggleFollowingProgress","requestUsers","Users","PreLoader","compose","withAuthRedirect","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,MADJ,EACYC,QADZ,EACsBC,cADtB,EAEIC,uBAFJ,EAE6BC,YAF7B,QAGO,2BAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,kBAAhC,EAAoDC,cAApD,EAAoEC,aAApE,EAAmFC,sBAAnF,QAAiH,6BAAjH;;AAIA,MAAMC,cAAN,SAA6BjB,KAAK,CAACkB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWjB,cAAX,CAA0BgB,UAA1B;AACA,WAAKC,KAAL,CAAWf,YAAX,CAAwBc,UAAxB,EAAoC,KAAKC,KAAL,CAAWC,QAA/C,EAF4B,CAG5B;AACH,KAVwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWf,YAAX,CAAwB,KAAKe,KAAL,CAAWG,WAAnC,EAAgD,KAAKH,KAAL,CAAWC,QAA3D;AACH;;AAQDG,EAAAA,MAAM,GAAG;AAEL,wBAAO,0CACD,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADvC,eAEH,oBAAC,KAAD;AACI,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eADhC;AAEI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAH5B;AAII,MAAA,aAAa,EAAE,KAAKL,aAJxB;AAKI,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWO,KALtB;AAMI,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWnB,MANvB;AAOI,MAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWlB,QAPzB;AAQI,MAAA,mBAAmB,EAAE,KAAKkB,KAAL,CAAWQ,mBARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAcH;;AA5BwC;AA+B7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAE7B,SAAO;AACH;AACAH,IAAAA,KAAK,EAAEjB,QAAQ,CAACoB,KAAD,CAFZ;AAGHT,IAAAA,QAAQ,EAAEV,WAAW,CAACmB,KAAD,CAHlB;AAIHJ,IAAAA,eAAe,EAAEd,kBAAkB,CAACkB,KAAD,CAJhC;AAKHP,IAAAA,WAAW,EAAEV,cAAc,CAACiB,KAAD,CALxB;AAMHL,IAAAA,UAAU,EAAEX,aAAa,CAACgB,KAAD,CANtB;AAOHF,IAAAA,mBAAmB,EAAEb,sBAAsB,CAACe,KAAD;AAPxC,GAAP;AAUH,CAZD;;AAcA,eAAetB,OAAO,EAClB;AACAR,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,cAApB;AAAoCC,EAAAA,uBAApC;AAA6DC,EAAAA;AAA7D,CAAlB,CAFW,CAAP,CAGbW,cAHa,CAAf","sourcesContent":["//Контейнерная компонента\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow, unfollow, setCurrentPage,\r\n    toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport PreLoader from '../Common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n        //debugger;\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            { this.props.isFetching ? <PreLoader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n        \r\n    }\r\n}\r\n*/\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        //users: getUsers(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers })\r\n)(UsersContainer)\r\n\r\n"]},"metadata":{},"sourceType":"module"}