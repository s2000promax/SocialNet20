{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/SocialNet20/src/Components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../Utils/Validators/validators';\nimport { Input } from '../Common/FormControls/FormsControls';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport styles from \"./../Common/FormControls/FormsControls.module.css\";\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    placeholder: \"Email\",\n    name: \"email\",\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    type: \"checkbox\",\n    name: \"rememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), \"remember me\"), props.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, props.error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Login\"))));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/designer/GitHub/SocialNet20/src/Components/Login/Login.jsx"],"names":["React","Field","reduxForm","required","Input","connect","login","Redirect","styles","LoginForm","props","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../Utils/Validators/validators';\r\nimport { Input } from '../Common/FormControls/FormsControls';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from \"./../Common/FormControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return (<div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Input} placeholder={\"Email\"} name={\"email\"}\r\n                validate={[required]} />\r\n            </div>\r\n\r\n            <div>\r\n                <Field component={Input} placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                validate={[required]} />\r\n            </div>\r\n\r\n            <div>\r\n                <Field component={Input} type={\"checkbox\"} name={\"rememberMe\"} />remember me\r\n            </div>\r\n            { props.error && \r\n            <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => { props.login(formData.email, formData.password, formData.rememberMe); }\r\n    if (props.isAuth) return <Redirect to={\"/profile\"} />\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ isAuth: state.isAuth})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);"]},"metadata":{},"sourceType":"module"}