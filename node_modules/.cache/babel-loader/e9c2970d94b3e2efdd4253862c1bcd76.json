{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/SocialNet20/src/Components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    //debugger;                                                              \n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.autorizedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  autorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/home/designer/GitHub/SocialNet20/src/Components/Profile/ProfileContainer.jsx"],"names":["React","connect","Profile","getUserProfile","getStatus","updateStatus","withRouter","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","autorizedUserId","history","push","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,6BAAxD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAGA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAE3CC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,eAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACX,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF;;AAGD,SAAKL,KAAL,CAAWV,cAAX,CAA0BS,MAA1B;AACA,SAAKC,KAAL,CAAWT,SAAX,CAAqBQ,MAArB;AAED;;AAEDO,EAAAA,MAAM,GAAG;AACT,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,OAAD,oBAAa,KAAKN,KAAlB;AAAyB,MAAA,OAAO,EAAG,KAAKA,KAAL,CAAWO,OAA9C;AAAwD,MAAA,MAAM,EAAG,KAAKP,KAAL,CAAWQ,MAA5E;AAAoF,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWR,YAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADL,CAAT;AAKI;;AAxBuC;;AA2B/C,IAAIiB,eAAe,GAAIC,KAAD,KAAa;AACjCH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADM;AAEjCC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFO;AAGjCL,EAAAA,eAAe,EAAEO,KAAK,CAACE,IAAN,CAAWb,MAHK;AAIjCc,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJc,CAAb,CAAtB;;AAOA,eAAelB,OAAO,CACpBP,OAAO,CAACqB,eAAD,EAAkB;AAACnB,EAAAA,cAAD;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA;AAA5B,CAAlB,CADa,EAEpBC,UAFoB,EAGpBC,gBAHoB,CAAP,CAKZE,gBALY,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\n\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n      //debugger;                                                              \r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n        userId = this.props.autorizedUserId;\r\n        if (!userId) {\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      }\r\n      \r\n\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n      \r\n    }\r\n\r\n    render() {\r\n    return ( <div>\r\n                  <Profile {...this.props} profile={ this.props.profile } status={ this.props.status} updateStatus={this.props.updateStatus} />\r\n             </div> \r\n             \r\n            )\r\n       } \r\n}\r\n\r\nlet mapStateToProps = (state) => ( {\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n  } );\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n\r\n )(ProfileContainer)\r\n"]},"metadata":{},"sourceType":"module"}