{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/SocialNet20/src/Components/Dialogs/Diaologs.jsx\";\nimport React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLenghtCreator, required } from '../../Utils/Validators/validators';\nimport { Textarea } from '../Common/FormControls/FormsControls';\nimport s from './Dialogs.module.css';\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n\n  const DialogItem = props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.dialog + ' ' + s.active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/dialogs/\" + props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, props.name));\n  };\n\n  const Message = props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.dialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, props.message);\n  };\n\n  let newMessageBody = state.newMessageBody;\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/React.createElement(DialogItem, {\n    name: d.name,\n    id: d.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 50\n    }\n  }));\n  let messagesElements = state.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 52\n    }\n  }));\n  /*\r\n      let onSendMessageClick = () => {\r\n          props.sendMessage();\r\n      }\r\n  \r\n      let onNewMessageChange = (e) => {\r\n          let body = e.target.value;\r\n          props.updateNewMessageBody(body);\r\n    }\r\n    */\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  }; //if (!props.isAuth) return <Redirect to={'/login'} />\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogsitems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, dialogsElements), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \" \", messagesElements), /*#__PURE__*/React.createElement(AddMessageFormRedux, {\n    onSubmit: addNewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst maxLength50 = maxLenghtCreator(50);\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Textarea,\n    validate: [required, maxLength50],\n    name: \"newMessageBody\",\n    placeholder: \"Enter your message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Send\"))));\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: \"dialogAddMessageForm\"\n})(AddMessageForm);\nexport default Dialogs;\n/*\r\n\r\nconst DialogItem = (props) => {\r\n\r\n      return <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n </div>;\r\n}\r\n\r\nconst Message = (props) => {\r\n\r\n      return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\n    let newMessageBody = props.state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n            props.store.dispatch(sendMessageCreator());\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.store.dispatch( updateNewMessageBodyCreator(body)  )\r\n    }\r\n\r\n\r\n*/","map":{"version":3,"sources":["/home/designer/GitHub/SocialNet20/src/Components/Dialogs/Diaologs.jsx"],"names":["React","NavLink","Redirect","Field","reduxForm","maxLenghtCreator","required","Textarea","s","Dialogs","props","state","dialogsPage","DialogItem","dialog","active","id","name","Message","message","newMessageBody","dialogsElements","dialogs","map","d","messagesElements","messages","m","addNewMessage","values","sendMessage","dialogsitems","maxLength50","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm  } from 'redux-form';\r\nimport { maxLenghtCreator, required } from '../../Utils/Validators/validators';\r\nimport { Textarea } from '../Common/FormControls/FormsControls';\r\nimport s from './Dialogs.module.css'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    const DialogItem = (props) => {\r\n\r\n        return <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>;\r\n    }\r\n\r\n    const Message = (props) => {\r\n\r\n        return <div className={s.dialog}>{props.message}</div>\r\n    }\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n\r\n/*\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n  }\r\n  */\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    //if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsitems}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n\r\n                <div> {messagesElements}</div>\r\n                \r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                    <div>\r\n                        <Field \r\n                           component={Textarea}\r\n                           validate={ [required, maxLength50] }\r\n                           name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n                    <div>\r\n                            <button>Send</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nconst DialogItem = (props) => {\r\n\r\n      return <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n </div>;\r\n}\r\n\r\nconst Message = (props) => {\r\n\r\n      return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\n    let newMessageBody = props.state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n            props.store.dispatch(sendMessageCreator());\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.store.dispatch( updateNewMessageBodyCreator(body)  )\r\n    }\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}